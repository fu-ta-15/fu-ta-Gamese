//*****************************************************************************
//
// テクスチャ処理 [TextureScene.cpp]
// Author : SUZUKI FUUTA
//
//*****************************************************************************
//-----------------------------------------------------------------------------
// インクルードファイル
//-----------------------------------------------------------------------------
#include "TextureScene.h"
#include "manager.h"
#include "renderer.h"

//-----------------------------------------------------------------------------
// 静的メンバ変数
//-----------------------------------------------------------------------------
CTextureScene *CTextureScene::m_pTexScene = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CTextureScene::CTextureScene()
{
	m_sLink = NULL;
	m_nID = 0;
	m_pTexture = NULL;
	m_pNext = NULL;
	m_pPrev = NULL;
}

//=============================================================================
// デストラクタ
//=============================================================================
CTextureScene::~CTextureScene()
{
}

//=============================================================================
// テクスチャのロード
//=============================================================================
void CTextureScene::LoadTexture(void)
{
}

//=============================================================================
// テクスチャのアンロード
//=============================================================================
void CTextureScene::UnLoadTexture(void)
{
}

//=============================================================================
// テクスチャの生成
//=============================================================================
void CTextureScene::CreateTexture(const char * sTexName)
{
	if (true)
	{

	}
	// 文字数を確認しchar型の変数を動的に確保
	size_t Length = strlen("TEXTURE/") + strlen(sTexName);
	m_sLink = new char[Length];

	// 文字列の合体
	strcpy(m_sLink, "TEXTURE/");
	strcat(m_sLink, sTexName);

	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = GET_DEVICE;

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice, m_sLink, &m_pTexture);

}
