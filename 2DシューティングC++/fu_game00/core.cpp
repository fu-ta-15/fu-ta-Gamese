//*****************************************************************************
//
// コア処理 [core.cpp]
// Author : SUZUKI FUUTA
//
//*****************************************************************************
//-----------------------------------------------------------------------------
// インクルードファイル
//-----------------------------------------------------------------------------
#include "core.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CCore::CCore(Priority nPriority) : CScene2D(nPriority)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CCore::~CCore()
{
}

//=============================================================================
// コアの生成
//=============================================================================
CCore * CCore::Create(const D3DXVECTOR3 pos, const D3DXVECTOR3 size, Priority nPriority)
{
	CCore *pCore = NULL;

	if (pCore == NULL)
	{
		pCore = new CCore(nPriority);

		pCore->SetPos(pos);
		pCore->SetSize(size);
		pCore->Init();
	}

	return pCore;
}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CCore::Init(void)
{
	CScene2D::Init();

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CCore::Uninit(void)
{
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CCore::Update(void)
{
	D3DXVECTOR3 pos = this->GetPos();
	D3DXVECTOR3 size = this->GetSize();

	CScene2D::Update();
	this->SetPos(pos);
	this->SetSize(size);
}

//=============================================================================
// 描画処理
//=============================================================================
void CCore::Draw(void)
{

	CScene2D::Draw();
}

//=============================================================================
// 当たり判定
//=============================================================================
bool CCore::CollisionBullet(void)
{
	return false;
}
