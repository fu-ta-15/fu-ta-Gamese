//*****************************************************************************
//
// スコア処理 [score.cpp]
// Author : SUZUKI FUUTA
//
//*****************************************************************************
//-----------------------------------------------------------------------------
// インクルードファイル
//-----------------------------------------------------------------------------
#include "score.h"

//-----------------------------------------------------------------------------
// マクロ変数
//-----------------------------------------------------------------------------
#define POLYGON_POS
#define POLYGON_SIZE

//=============================================================================
// コンストラクタ
//=============================================================================
CScore::CScore() : CScene(OBJ_NONE)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CScore::~CScore()
{
}

//=============================================================================
// スコアの生成
//=============================================================================
CScore * CScore::Create(const D3DXVECTOR3 pos, const D3DXVECTOR3 size)
{
	CScore *pScore = NULL;

	if (pScore == NULL)
	{
		pScore = new CScore;
		pScore->m_pos = pos;
		pScore->m_size = size;
		pScore->m_nScore = 0;
		pScore->Init();
	}

	return pScore;
}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CScore::Init()
{
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CScore::Uninit()
{
	//オブジェクトの破棄
	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CScore::Update()
{
}

//=============================================================================
// 描画処理
//=============================================================================
void CScore::Draw()
{
}

//=============================================================================
// スコアのセット
//=============================================================================
void CScore::SetScore(int nScore)
{
	int aNumber[MAX_SCORE];
	int nMath = 1000;	//スコア計算

}

//=============================================================================
// スコアの加算
//=============================================================================
void CScore::AddScore(int nValue)
{
	m_nScore += nValue;
}

//=============================================================================
// 現在のスコアの所得
//=============================================================================
int CScore::GetScore()
{
	return m_nScore;
}
